#V is capital
apiVersion: v1

#P capital
kind: Pod

metadata:
  name: second-pod
  labels:
    app: first-app

spec:
  containers:
    - name: nginx-container
      image: nginx

    - name: nginx-container2
      image: alpine
      command: ["watch", "wget", "-qO-", "localhost"]
####################################

apiVersion: v1
kind: Pod
metadata:
  name: first-pod
spec:
  containers:
  - name: container-1
    image: nginx
    ports:
    - containerPort: 80
  - name: container-2
    image: alpine
    command: ["watch", "wget", "-qO-", "localhost"]



apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: yellow
  name: yellow
spec:
  containers:
  - image: busybox
    name: lemon
  - image: redis
    name: gold
    command: ["localhost"]



    MULTI CONTAINER POD LAB

    controlplane $ more pod.yml
    apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2021-01-28T11:07:25Z"
      labels:
        name: app
      managedFields:
        - apiVersion: v1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:labels:
                .: { }
                f:name: { }
            f:spec:
              f:containers:
                k:{"name":"app"}:
                  .: { }
                  f:image: { }
                  f:imagePullPolicy: { }
                  f:name: { }
                  f:resources: { }
                  f:terminationMessagePath: { }
                  f:terminationMessagePolicy: { }
                  f:volumeMounts:
                    .: { }
                    k:{"mountPath":"/log"}:
                      .: { }
                      f:mountPath: { }
                      f:name: { }
              f:dnsPolicy: { }
              f:enableServiceLinks: { }
              f:restartPolicy: { }
              f:schedulerName: { }
              f:securityContext: { }
              f:terminationGracePeriodSeconds: { }
              f:volumes:
                .: { }
                k:{"name":"log-volume"}:
                  .: { }
                  f:hostPath:
                    .: { }
                    f:path: { }
                    f:type: { }
                  f:name: { }
          manager: kubectl-create
          operation: Update
          time: "2021-01-28T11:07:25Z"
        - apiVersion: v1
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              f:conditions:
                k:{"type":"ContainersReady"}:
                  .: { }
                  f:lastProbeTime: { }
                  f:lastTransitionTime: { }
                  f:status: { }
                  f:type: { }
                k:{"type":"Initialized"}:
                  .: { }
                  f:lastProbeTime: { }
                  f:lastTransitionTime: { }
                  f:status: { }
                  f:type: { }
                k:{"type":"Ready"}:
                  .: { }
                  f:lastProbeTime: { }
                  f:lastTransitionTime: { }
                  f:status: { }
                  f:type: { }
              f:containerStatuses: { }
              f:hostIP: { }
              f:phase: { }
              f:podIP: { }
              f:podIPs:
                .: { }
                k:{"ip":"10.244.1.3"}:
                  .: { }
                  f:ip: { }
              f:startTime: { }
          manager: kubelet
          operation: Update
          time: "2021-01-28T11:07:32Z"
      name: app
      namespace: elastic-stack
      resourceVersion: "647"
      selfLink: /api/v1/namespaces/elastic-stack/pods/app
      uid: 908ac1b3-681d-46d8-8d8c-16f89a4411c4
    spec:
      containers:
        - image: kodekloud/event-simulator
          imagePullPolicy: Always
          name: app
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /log
              name: log-volume
        - image: kodekloud/filebeat-configured
          name: sidecar
          volumeMounts:
            - mountPath: /var/log/event-simulator/
              name: log-volume
      volumes:
        - hostPath:
            path: /var/log/webapp
            type: DirectoryOrCreate
          name: log-volume




controlplane $ kubectl exec app -it cat /log/app.log -n elastic-stack


controlplane $ more red.yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-02-13T01:20:49Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:containers:
          k:{"name":"red-container"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
    manager: python-requests
    operation: Update
    time: "2021-02-13T01:20:49Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.244.1.2"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2021-02-13T01:20:52Z"
  name: red
  namespace: default
  resourceVersion: "749"
  selfLink: /api/v1/namespaces/default/pods/red
  uid: 717c2200-7708-4af5-95d0-e266afa5414e
spec:
  containers:
  - command:
    - sh
    - -c
    - echo The app is running! && sleep 3600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: red-container
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
  initContainers:
  - name: init-red
    image: busybox
    command:
    - "sleep"
    - "20"


WORKING MULTIPLE CONTAINER POD


apiVersion: v1
kind: Pod
metadata:
  name: yellow
  labels:
    app: yellow
spec:
  containers:
    - name: gold
      image: redis
    - name: lemon
      image: busybox
      command: ["watch", "wget", "-qO-", "localhost"]

