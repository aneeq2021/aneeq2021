Q11

apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    id: ds-important
    uuid: 18426a0b-5f59-4e10-923f-c0e078e82462
  name: ds-important
  namespace: project-tiger
spec:
  selector:
    matchLabels:
      id: ds-important
      uuid: 18426a0b-5f59-4e10-923f-c0e078e82462
  template:
    metadata:
      labels:
        id: ds-important
        uuid: 18426a0b-5f59-4e10-923f-c0e078e82462
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
      tolerations:
      - key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
		

			

Q4


apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
  name: ready-if-service-ready
spec:
  containers:
  - image: nginx:1.16.1-alpine
    name: ready-if-service-ready
    livenessProbe:
      exec:
        command:
        - "true"
    readinessProbe:
       exec:
         command:
         - "sh"
         - "c"
         - "wget -T2 -O- http://service-am-i-ready:80"
		 
	
Q5

k8s@terminal:~$ more /opt/course/5/find_pods_uid.sh
kubectl get pods --sort-by=.metadata.uid

k8s@terminal:~$ more /opt/course/5/find_pods.sh 
kubectl get pods --sort-by=.metadata.creationTimestamp	


	
			
			
Q12

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    id: very-important
  name: deploy-important
  namespace: project-tiger
spec:
  replicas: 3
  selector:
    matchLabels:
      id: very-important
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        id: very-important
    spec:
      containers:
      - image: nginx:1.17.6-alpine
        name: container1
      - image: kubernetes/pause
        name: container2
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: id
                operator: In
                values:
                - very-important
            topologyKey: "kubernetes.io/hostname"
		
		
Q13

k8s@terminal:~$ more multi.yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: multi-container-playground
  name: multi-container-playground
spec:
  containers:
  - image: nginx:1.17.6-alpine
    name: c1
    env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
    volumeMounts:
    - mountPath: /tmp
      name: test-volume

  - image: busybox:1.31.1
    name: c2
    volumeMounts:
    - mountPath: /tmp
      name: test-volume
    command: 
    - "sh"
    - "-c"
    - "while true; do date >> /tmp/date.log; sleep 1; done"

  - image: busybox:1.31.1
    name: c3
    volumeMounts:
    - mountPath: /tmp
      name: test-volume
    command:
    - "sh"
    - "c"  
    - "tail -f /tmp/date.log"
  volumes:
  - name: test-volume
    emptyDir: {}
	
	  
	  

Q18

Systemctl status kubelet
journalctl -x  | grep -i kubelet
vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS

Q19

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: secret-pod
  name: secret-pod
  namespace: secret
spec:
  volumes:
  - name: secret1
    secret:
      secretName: secret1
  tolerations:
  - key: "node-role.kubernetes.io/master"
    effect: "NoSchedule"
  containers:
  - image: busybox:1.31.1
    name: secret-pod
    args: ["sh", "-c", "sleep 1d"]
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: secret2
            key: user
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
            name: secret2
            key: pass
    volumeMounts:
    - name: secret1
      readOnly: true
      mountPath: "/tmp/secret1" 
	  
	  
	
	
	
	k8s@terminal:~$ more pod2.yaml 
apiVersion: v1
kind: Pod
metadata:
  name: secret-test-pod
  namespace: secret
spec:
  containers:
    - name: test-container
      image: k8s.gcr.io/busybox
      envFrom:
      - secretRef:
          name: secret2
		  

Q21

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: my-static-pod
  name: my-static-pod
spec:
  containers:
  - image: nginx:1.16-alpine
    name: my-static-pod
    resources:
      requests:
        memory: "20Mi"
        cpu: "10m"
~                  

Q24

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-backend  
  namespace: project-snake
spec:
  podSelector:  
    matchLabels:
      app: backend
  policyTypes:
  - Egress 
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: db1
    ports: 
    - protocol: TCP
      port: 1111

  - to:
    - podSelector:
        matchLabels:
          app: db2
    ports:
    - protocol: TCP
      port: 2222
k8s@terminal:~$ 

	
	


https://www.shopify.com.au/pricing
https://au.oberlo.com/pricing
https://www.synopsys.com/blogs/software-security/agile-cicd-devops-difference/
https://ww1.cvcheck.com/SessionExpire.aspx
https://hudsonrpo-2c9payroll.force.com/community/s/login/?ec=301&startURL=%2Fcommunity%2Fs%2Ftimesheets 




